//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PushOrders.CDSAPIService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDSView", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class CDSView : PushOrders.CDSAPIService.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.Response DCResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.Declaration DeclarationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.MailObject MailObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.Response ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.Response DCResponse {
            get {
                return this.DCResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.DCResponseField, value) != true)) {
                    this.DCResponseField = value;
                    this.RaisePropertyChanged("DCResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.Declaration Declaration {
            get {
                return this.DeclarationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarationField, value) != true)) {
                    this.DeclarationField = value;
                    this.RaisePropertyChanged("Declaration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.MailObject MailObject {
            get {
                return this.MailObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.MailObjectField, value) != true)) {
                    this.MailObjectField = value;
                    this.RaisePropertyChanged("MailObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.Response Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/PTC.BusinessLayer.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.CDSObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.Response))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.Declaration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.MailObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.RestrictionProhibition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.CDSView))]
    public partial class Entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int entityStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int entityState {
            get {
                return this.entityStateField;
            }
            set {
                if ((this.entityStateField.Equals(value) != true)) {
                    this.entityStateField = value;
                    this.RaisePropertyChanged("entityState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDSObject", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.Response))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PushOrders.CDSAPIService.Declaration))]
    public partial class CDSObject : PushOrders.CDSAPIService.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CDSStateCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustOrganizationCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MailObjectPIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostOrganizationCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CDSStateCd {
            get {
                return this.CDSStateCdField;
            }
            set {
                if ((this.CDSStateCdField.Equals(value) != true)) {
                    this.CDSStateCdField = value;
                    this.RaisePropertyChanged("CDSStateCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustOrganizationCd {
            get {
                return this.CustOrganizationCdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustOrganizationCdField, value) != true)) {
                    this.CustOrganizationCdField = value;
                    this.RaisePropertyChanged("CustOrganizationCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MailObjectPId {
            get {
                return this.MailObjectPIdField;
            }
            set {
                if ((this.MailObjectPIdField.Equals(value) != true)) {
                    this.MailObjectPIdField = value;
                    this.RaisePropertyChanged("MailObjectPId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PId {
            get {
                return this.PIdField;
            }
            set {
                if ((this.PIdField.Equals(value) != true)) {
                    this.PIdField = value;
                    this.RaisePropertyChanged("PId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostOrganizationCd {
            get {
                return this.PostOrganizationCdField;
            }
            set {
                if ((object.ReferenceEquals(this.PostOrganizationCdField, value) != true)) {
                    this.PostOrganizationCdField = value;
                    this.RaisePropertyChanged("PostOrganizationCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLData {
            get {
                return this.XMLDataField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDataField, value) != true)) {
                    this.XMLDataField = value;
                    this.RaisePropertyChanged("XMLData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class Response : PushOrders.CDSAPIService.CDSObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.Response.ResponseData DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.Response.ResponseData Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Response.ResponseData", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
        [System.SerializableAttribute()]
        public partial class ResponseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.DateTime> ClearanceDtField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DecisionCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DecisionReasonCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DecisionReasonNmField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool DutiableField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string[] ExtraFieldNamesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string[] ExtraFieldValuesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private PushOrders.CDSAPIService.Response.ResponseData.Tax[] TaxesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> TotalFeeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TotalFeeCurrencyCdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.DateTime> ClearanceDt {
                get {
                    return this.ClearanceDtField;
                }
                set {
                    if ((this.ClearanceDtField.Equals(value) != true)) {
                        this.ClearanceDtField = value;
                        this.RaisePropertyChanged("ClearanceDt");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DecisionCd {
                get {
                    return this.DecisionCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.DecisionCdField, value) != true)) {
                        this.DecisionCdField = value;
                        this.RaisePropertyChanged("DecisionCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DecisionReasonCd {
                get {
                    return this.DecisionReasonCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.DecisionReasonCdField, value) != true)) {
                        this.DecisionReasonCdField = value;
                        this.RaisePropertyChanged("DecisionReasonCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DecisionReasonNm {
                get {
                    return this.DecisionReasonNmField;
                }
                set {
                    if ((object.ReferenceEquals(this.DecisionReasonNmField, value) != true)) {
                        this.DecisionReasonNmField = value;
                        this.RaisePropertyChanged("DecisionReasonNm");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool Dutiable {
                get {
                    return this.DutiableField;
                }
                set {
                    if ((this.DutiableField.Equals(value) != true)) {
                        this.DutiableField = value;
                        this.RaisePropertyChanged("Dutiable");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string[] ExtraFieldNames {
                get {
                    return this.ExtraFieldNamesField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExtraFieldNamesField, value) != true)) {
                        this.ExtraFieldNamesField = value;
                        this.RaisePropertyChanged("ExtraFieldNames");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string[] ExtraFieldValues {
                get {
                    return this.ExtraFieldValuesField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExtraFieldValuesField, value) != true)) {
                        this.ExtraFieldValuesField = value;
                        this.RaisePropertyChanged("ExtraFieldValues");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public PushOrders.CDSAPIService.Response.ResponseData.Tax[] Taxes {
                get {
                    return this.TaxesField;
                }
                set {
                    if ((object.ReferenceEquals(this.TaxesField, value) != true)) {
                        this.TaxesField = value;
                        this.RaisePropertyChanged("Taxes");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> TotalFee {
                get {
                    return this.TotalFeeField;
                }
                set {
                    if ((this.TotalFeeField.Equals(value) != true)) {
                        this.TotalFeeField = value;
                        this.RaisePropertyChanged("TotalFee");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string TotalFeeCurrencyCd {
                get {
                    return this.TotalFeeCurrencyCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.TotalFeeCurrencyCdField, value) != true)) {
                        this.TotalFeeCurrencyCdField = value;
                        this.RaisePropertyChanged("TotalFeeCurrencyCd");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="Response.ResponseData.Tax", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
            [System.SerializableAttribute()]
            public partial class Tax : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<decimal> AmountField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string CurrencyCdField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string DescriptionField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string[] ExtraFieldNamesField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string[] ExtraFieldValuesField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string HSField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<decimal> NetWeightField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<int> NumberField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<decimal> RateField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string TypeField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<decimal> Amount {
                    get {
                        return this.AmountField;
                    }
                    set {
                        if ((this.AmountField.Equals(value) != true)) {
                            this.AmountField = value;
                            this.RaisePropertyChanged("Amount");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string CurrencyCd {
                    get {
                        return this.CurrencyCdField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.CurrencyCdField, value) != true)) {
                            this.CurrencyCdField = value;
                            this.RaisePropertyChanged("CurrencyCd");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Description {
                    get {
                        return this.DescriptionField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                            this.DescriptionField = value;
                            this.RaisePropertyChanged("Description");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string[] ExtraFieldNames {
                    get {
                        return this.ExtraFieldNamesField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ExtraFieldNamesField, value) != true)) {
                            this.ExtraFieldNamesField = value;
                            this.RaisePropertyChanged("ExtraFieldNames");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string[] ExtraFieldValues {
                    get {
                        return this.ExtraFieldValuesField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ExtraFieldValuesField, value) != true)) {
                            this.ExtraFieldValuesField = value;
                            this.RaisePropertyChanged("ExtraFieldValues");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string HS {
                    get {
                        return this.HSField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.HSField, value) != true)) {
                            this.HSField = value;
                            this.RaisePropertyChanged("HS");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<decimal> NetWeight {
                    get {
                        return this.NetWeightField;
                    }
                    set {
                        if ((this.NetWeightField.Equals(value) != true)) {
                            this.NetWeightField = value;
                            this.RaisePropertyChanged("NetWeight");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<int> Number {
                    get {
                        return this.NumberField;
                    }
                    set {
                        if ((this.NumberField.Equals(value) != true)) {
                            this.NumberField = value;
                            this.RaisePropertyChanged("Number");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<decimal> Rate {
                    get {
                        return this.RateField;
                    }
                    set {
                        if ((this.RateField.Equals(value) != true)) {
                            this.RateField = value;
                            this.RaisePropertyChanged("Rate");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Type {
                    get {
                        return this.TypeField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                            this.TypeField = value;
                            this.RaisePropertyChanged("Type");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Declaration", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class Declaration : PushOrders.CDSAPIService.CDSObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.Declaration.DeclarationData DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.Declaration.DeclarationData Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Declaration.DeclarationData", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
        [System.SerializableAttribute()]
        public partial class DeclarationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private PushOrders.CDSAPIService.Declaration.DeclarationData.ContentPiece[] ContentPiecesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private PushOrders.CDSAPIService.Declaration.DeclarationData.Document[] DocumentsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string[] ExtraFieldNamesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string[] ExtraFieldValuesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> GrossWeightField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string HandlingClassCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> InsuredValueField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string InsuredValueCurrencyCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<int> MaxIndexField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NatureTypeCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PackageImageLocalPathField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PackageImageSourceInfoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<decimal> PostageField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PostageCurrencyCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientAddressLine1Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientAddressLine2Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientCountryCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientEmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientFaxField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientFirstNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientIdRefField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientLastNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientStateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientTelephoneField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RecipientZIPField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderAddressLine1Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderAddressLine2Field;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderCityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderCountryCdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderEmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderFirstNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderIdRefField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderLastNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderStateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderTelephoneField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SenderZIPField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.DateTime> TransportDateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TransportModeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public PushOrders.CDSAPIService.Declaration.DeclarationData.ContentPiece[] ContentPieces {
                get {
                    return this.ContentPiecesField;
                }
                set {
                    if ((object.ReferenceEquals(this.ContentPiecesField, value) != true)) {
                        this.ContentPiecesField = value;
                        this.RaisePropertyChanged("ContentPieces");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public PushOrders.CDSAPIService.Declaration.DeclarationData.Document[] Documents {
                get {
                    return this.DocumentsField;
                }
                set {
                    if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                        this.DocumentsField = value;
                        this.RaisePropertyChanged("Documents");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string[] ExtraFieldNames {
                get {
                    return this.ExtraFieldNamesField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExtraFieldNamesField, value) != true)) {
                        this.ExtraFieldNamesField = value;
                        this.RaisePropertyChanged("ExtraFieldNames");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string[] ExtraFieldValues {
                get {
                    return this.ExtraFieldValuesField;
                }
                set {
                    if ((object.ReferenceEquals(this.ExtraFieldValuesField, value) != true)) {
                        this.ExtraFieldValuesField = value;
                        this.RaisePropertyChanged("ExtraFieldValues");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> GrossWeight {
                get {
                    return this.GrossWeightField;
                }
                set {
                    if ((this.GrossWeightField.Equals(value) != true)) {
                        this.GrossWeightField = value;
                        this.RaisePropertyChanged("GrossWeight");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string HandlingClassCd {
                get {
                    return this.HandlingClassCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.HandlingClassCdField, value) != true)) {
                        this.HandlingClassCdField = value;
                        this.RaisePropertyChanged("HandlingClassCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> InsuredValue {
                get {
                    return this.InsuredValueField;
                }
                set {
                    if ((this.InsuredValueField.Equals(value) != true)) {
                        this.InsuredValueField = value;
                        this.RaisePropertyChanged("InsuredValue");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string InsuredValueCurrencyCd {
                get {
                    return this.InsuredValueCurrencyCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.InsuredValueCurrencyCdField, value) != true)) {
                        this.InsuredValueCurrencyCdField = value;
                        this.RaisePropertyChanged("InsuredValueCurrencyCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<int> MaxIndex {
                get {
                    return this.MaxIndexField;
                }
                set {
                    if ((this.MaxIndexField.Equals(value) != true)) {
                        this.MaxIndexField = value;
                        this.RaisePropertyChanged("MaxIndex");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string NatureTypeCd {
                get {
                    return this.NatureTypeCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.NatureTypeCdField, value) != true)) {
                        this.NatureTypeCdField = value;
                        this.RaisePropertyChanged("NatureTypeCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PackageImageLocalPath {
                get {
                    return this.PackageImageLocalPathField;
                }
                set {
                    if ((object.ReferenceEquals(this.PackageImageLocalPathField, value) != true)) {
                        this.PackageImageLocalPathField = value;
                        this.RaisePropertyChanged("PackageImageLocalPath");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PackageImageSourceInfo {
                get {
                    return this.PackageImageSourceInfoField;
                }
                set {
                    if ((object.ReferenceEquals(this.PackageImageSourceInfoField, value) != true)) {
                        this.PackageImageSourceInfoField = value;
                        this.RaisePropertyChanged("PackageImageSourceInfo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<decimal> Postage {
                get {
                    return this.PostageField;
                }
                set {
                    if ((this.PostageField.Equals(value) != true)) {
                        this.PostageField = value;
                        this.RaisePropertyChanged("Postage");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PostageCurrencyCd {
                get {
                    return this.PostageCurrencyCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.PostageCurrencyCdField, value) != true)) {
                        this.PostageCurrencyCdField = value;
                        this.RaisePropertyChanged("PostageCurrencyCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientAddressLine1 {
                get {
                    return this.RecipientAddressLine1Field;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientAddressLine1Field, value) != true)) {
                        this.RecipientAddressLine1Field = value;
                        this.RaisePropertyChanged("RecipientAddressLine1");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientAddressLine2 {
                get {
                    return this.RecipientAddressLine2Field;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientAddressLine2Field, value) != true)) {
                        this.RecipientAddressLine2Field = value;
                        this.RaisePropertyChanged("RecipientAddressLine2");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientCity {
                get {
                    return this.RecipientCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientCityField, value) != true)) {
                        this.RecipientCityField = value;
                        this.RaisePropertyChanged("RecipientCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientCountryCd {
                get {
                    return this.RecipientCountryCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientCountryCdField, value) != true)) {
                        this.RecipientCountryCdField = value;
                        this.RaisePropertyChanged("RecipientCountryCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientEmail {
                get {
                    return this.RecipientEmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientEmailField, value) != true)) {
                        this.RecipientEmailField = value;
                        this.RaisePropertyChanged("RecipientEmail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientFax {
                get {
                    return this.RecipientFaxField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientFaxField, value) != true)) {
                        this.RecipientFaxField = value;
                        this.RaisePropertyChanged("RecipientFax");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientFirstName {
                get {
                    return this.RecipientFirstNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientFirstNameField, value) != true)) {
                        this.RecipientFirstNameField = value;
                        this.RaisePropertyChanged("RecipientFirstName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientIdRef {
                get {
                    return this.RecipientIdRefField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientIdRefField, value) != true)) {
                        this.RecipientIdRefField = value;
                        this.RaisePropertyChanged("RecipientIdRef");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientLastName {
                get {
                    return this.RecipientLastNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientLastNameField, value) != true)) {
                        this.RecipientLastNameField = value;
                        this.RaisePropertyChanged("RecipientLastName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientName {
                get {
                    return this.RecipientNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientNameField, value) != true)) {
                        this.RecipientNameField = value;
                        this.RaisePropertyChanged("RecipientName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientState {
                get {
                    return this.RecipientStateField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientStateField, value) != true)) {
                        this.RecipientStateField = value;
                        this.RaisePropertyChanged("RecipientState");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientTelephone {
                get {
                    return this.RecipientTelephoneField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientTelephoneField, value) != true)) {
                        this.RecipientTelephoneField = value;
                        this.RaisePropertyChanged("RecipientTelephone");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RecipientZIP {
                get {
                    return this.RecipientZIPField;
                }
                set {
                    if ((object.ReferenceEquals(this.RecipientZIPField, value) != true)) {
                        this.RecipientZIPField = value;
                        this.RaisePropertyChanged("RecipientZIP");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderAddressLine1 {
                get {
                    return this.SenderAddressLine1Field;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderAddressLine1Field, value) != true)) {
                        this.SenderAddressLine1Field = value;
                        this.RaisePropertyChanged("SenderAddressLine1");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderAddressLine2 {
                get {
                    return this.SenderAddressLine2Field;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderAddressLine2Field, value) != true)) {
                        this.SenderAddressLine2Field = value;
                        this.RaisePropertyChanged("SenderAddressLine2");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderCity {
                get {
                    return this.SenderCityField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderCityField, value) != true)) {
                        this.SenderCityField = value;
                        this.RaisePropertyChanged("SenderCity");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderCountryCd {
                get {
                    return this.SenderCountryCdField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderCountryCdField, value) != true)) {
                        this.SenderCountryCdField = value;
                        this.RaisePropertyChanged("SenderCountryCd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderEmail {
                get {
                    return this.SenderEmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                        this.SenderEmailField = value;
                        this.RaisePropertyChanged("SenderEmail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderFirstName {
                get {
                    return this.SenderFirstNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderFirstNameField, value) != true)) {
                        this.SenderFirstNameField = value;
                        this.RaisePropertyChanged("SenderFirstName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderIdRef {
                get {
                    return this.SenderIdRefField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderIdRefField, value) != true)) {
                        this.SenderIdRefField = value;
                        this.RaisePropertyChanged("SenderIdRef");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderLastName {
                get {
                    return this.SenderLastNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderLastNameField, value) != true)) {
                        this.SenderLastNameField = value;
                        this.RaisePropertyChanged("SenderLastName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderName {
                get {
                    return this.SenderNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                        this.SenderNameField = value;
                        this.RaisePropertyChanged("SenderName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderState {
                get {
                    return this.SenderStateField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderStateField, value) != true)) {
                        this.SenderStateField = value;
                        this.RaisePropertyChanged("SenderState");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderTelephone {
                get {
                    return this.SenderTelephoneField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderTelephoneField, value) != true)) {
                        this.SenderTelephoneField = value;
                        this.RaisePropertyChanged("SenderTelephone");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SenderZIP {
                get {
                    return this.SenderZIPField;
                }
                set {
                    if ((object.ReferenceEquals(this.SenderZIPField, value) != true)) {
                        this.SenderZIPField = value;
                        this.RaisePropertyChanged("SenderZIP");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.DateTime> TransportDate {
                get {
                    return this.TransportDateField;
                }
                set {
                    if ((this.TransportDateField.Equals(value) != true)) {
                        this.TransportDateField = value;
                        this.RaisePropertyChanged("TransportDate");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string TransportMode {
                get {
                    return this.TransportModeField;
                }
                set {
                    if ((object.ReferenceEquals(this.TransportModeField, value) != true)) {
                        this.TransportModeField = value;
                        this.RaisePropertyChanged("TransportMode");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="Declaration.DeclarationData.ContentPiece", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
            [System.SerializableAttribute()]
            public partial class ContentPiece : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<decimal> AmountField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string CurrencyCdField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string DescriptionField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string[] ExtraFieldNamesField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string[] ExtraFieldValuesField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string HSField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string ImportRestrictionsField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string ImportRestrictionsNotesField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<int> IndexField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<decimal> NetWeightField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private System.Nullable<int> NumberField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string OrigCountryCdField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string RevisedDescriptionField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string RevisedHSField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<decimal> Amount {
                    get {
                        return this.AmountField;
                    }
                    set {
                        if ((this.AmountField.Equals(value) != true)) {
                            this.AmountField = value;
                            this.RaisePropertyChanged("Amount");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string CurrencyCd {
                    get {
                        return this.CurrencyCdField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.CurrencyCdField, value) != true)) {
                            this.CurrencyCdField = value;
                            this.RaisePropertyChanged("CurrencyCd");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string Description {
                    get {
                        return this.DescriptionField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                            this.DescriptionField = value;
                            this.RaisePropertyChanged("Description");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string[] ExtraFieldNames {
                    get {
                        return this.ExtraFieldNamesField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ExtraFieldNamesField, value) != true)) {
                            this.ExtraFieldNamesField = value;
                            this.RaisePropertyChanged("ExtraFieldNames");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string[] ExtraFieldValues {
                    get {
                        return this.ExtraFieldValuesField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ExtraFieldValuesField, value) != true)) {
                            this.ExtraFieldValuesField = value;
                            this.RaisePropertyChanged("ExtraFieldValues");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string HS {
                    get {
                        return this.HSField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.HSField, value) != true)) {
                            this.HSField = value;
                            this.RaisePropertyChanged("HS");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string ImportRestrictions {
                    get {
                        return this.ImportRestrictionsField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ImportRestrictionsField, value) != true)) {
                            this.ImportRestrictionsField = value;
                            this.RaisePropertyChanged("ImportRestrictions");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string ImportRestrictionsNotes {
                    get {
                        return this.ImportRestrictionsNotesField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.ImportRestrictionsNotesField, value) != true)) {
                            this.ImportRestrictionsNotesField = value;
                            this.RaisePropertyChanged("ImportRestrictionsNotes");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<int> Index {
                    get {
                        return this.IndexField;
                    }
                    set {
                        if ((this.IndexField.Equals(value) != true)) {
                            this.IndexField = value;
                            this.RaisePropertyChanged("Index");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<decimal> NetWeight {
                    get {
                        return this.NetWeightField;
                    }
                    set {
                        if ((this.NetWeightField.Equals(value) != true)) {
                            this.NetWeightField = value;
                            this.RaisePropertyChanged("NetWeight");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public System.Nullable<int> Number {
                    get {
                        return this.NumberField;
                    }
                    set {
                        if ((this.NumberField.Equals(value) != true)) {
                            this.NumberField = value;
                            this.RaisePropertyChanged("Number");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string OrigCountryCd {
                    get {
                        return this.OrigCountryCdField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.OrigCountryCdField, value) != true)) {
                            this.OrigCountryCdField = value;
                            this.RaisePropertyChanged("OrigCountryCd");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string RevisedDescription {
                    get {
                        return this.RevisedDescriptionField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.RevisedDescriptionField, value) != true)) {
                            this.RevisedDescriptionField = value;
                            this.RaisePropertyChanged("RevisedDescription");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string RevisedHS {
                    get {
                        return this.RevisedHSField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.RevisedHSField, value) != true)) {
                            this.RevisedHSField = value;
                            this.RaisePropertyChanged("RevisedHS");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="Declaration.DeclarationData.Document", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
            [System.SerializableAttribute()]
            public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string DocumentIdField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string DocumentNameField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private string DocumentTypeField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string DocumentId {
                    get {
                        return this.DocumentIdField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.DocumentIdField, value) != true)) {
                            this.DocumentIdField = value;
                            this.RaisePropertyChanged("DocumentId");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string DocumentName {
                    get {
                        return this.DocumentNameField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                            this.DocumentNameField = value;
                            this.RaisePropertyChanged("DocumentName");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public string DocumentType {
                    get {
                        return this.DocumentTypeField;
                    }
                    set {
                        if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                            this.DocumentTypeField = value;
                            this.RaisePropertyChanged("DocumentType");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailObject", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class MailObject : PushOrders.CDSAPIService.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestPostOrgCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalId2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailCategoryCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailClassCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MailStateCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailStateRemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrigPostOrgCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PostingDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestPostOrgCd {
            get {
                return this.DestPostOrgCdField;
            }
            set {
                if ((object.ReferenceEquals(this.DestPostOrgCdField, value) != true)) {
                    this.DestPostOrgCdField = value;
                    this.RaisePropertyChanged("DestPostOrgCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalId {
            get {
                return this.LocalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIdField, value) != true)) {
                    this.LocalIdField = value;
                    this.RaisePropertyChanged("LocalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalId2 {
            get {
                return this.LocalId2Field;
            }
            set {
                if ((object.ReferenceEquals(this.LocalId2Field, value) != true)) {
                    this.LocalId2Field = value;
                    this.RaisePropertyChanged("LocalId2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailCategoryCd {
            get {
                return this.MailCategoryCdField;
            }
            set {
                if ((object.ReferenceEquals(this.MailCategoryCdField, value) != true)) {
                    this.MailCategoryCdField = value;
                    this.RaisePropertyChanged("MailCategoryCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailClassCd {
            get {
                return this.MailClassCdField;
            }
            set {
                if ((object.ReferenceEquals(this.MailClassCdField, value) != true)) {
                    this.MailClassCdField = value;
                    this.RaisePropertyChanged("MailClassCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MailStateCd {
            get {
                return this.MailStateCdField;
            }
            set {
                if ((this.MailStateCdField.Equals(value) != true)) {
                    this.MailStateCdField = value;
                    this.RaisePropertyChanged("MailStateCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailStateRemarks {
            get {
                return this.MailStateRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.MailStateRemarksField, value) != true)) {
                    this.MailStateRemarksField = value;
                    this.RaisePropertyChanged("MailStateRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrigPostOrgCd {
            get {
                return this.OrigPostOrgCdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrigPostOrgCdField, value) != true)) {
                    this.OrigPostOrgCdField = value;
                    this.RaisePropertyChanged("OrigPostOrgCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PId {
            get {
                return this.PIdField;
            }
            set {
                if ((this.PIdField.Equals(value) != true)) {
                    this.PIdField = value;
                    this.RaisePropertyChanged("PId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostingDt {
            get {
                return this.PostingDtField;
            }
            set {
                if ((this.PostingDtField.Equals(value) != true)) {
                    this.PostingDtField = value;
                    this.RaisePropertyChanged("PostingDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCd {
            get {
                return this.TypeCdField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCdField, value) != true)) {
                    this.TypeCdField = value;
                    this.RaisePropertyChanged("TypeCd");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestrictionProhibition", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Management")]
    [System.SerializableAttribute()]
    public partial class RestrictionProhibition : PushOrders.CDSAPIService.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDocFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromHSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HSCodeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictedCountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToHSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalDocFileName {
            get {
                return this.AdditionalDocFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDocFileNameField, value) != true)) {
                    this.AdditionalDocFileNameField = value;
                    this.RaisePropertyChanged("AdditionalDocFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromHSCode {
            get {
                return this.FromHSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FromHSCodeField, value) != true)) {
                    this.FromHSCodeField = value;
                    this.RaisePropertyChanged("FromHSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HSCodeList {
            get {
                return this.HSCodeListField;
            }
            set {
                if ((object.ReferenceEquals(this.HSCodeListField, value) != true)) {
                    this.HSCodeListField = value;
                    this.RaisePropertyChanged("HSCodeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCd {
            get {
                return this.LanguageCdField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCdField, value) != true)) {
                    this.LanguageCdField = value;
                    this.RaisePropertyChanged("LanguageCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationCd {
            get {
                return this.OrganizationCdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationCdField, value) != true)) {
                    this.OrganizationCdField = value;
                    this.RaisePropertyChanged("OrganizationCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCategory {
            get {
                return this.PCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.PCategoryField, value) != true)) {
                    this.PCategoryField = value;
                    this.RaisePropertyChanged("PCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictedCountries {
            get {
                return this.RestrictedCountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictedCountriesField, value) != true)) {
                    this.RestrictedCountriesField = value;
                    this.RaisePropertyChanged("RestrictedCountries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionNote {
            get {
                return this.RestrictionNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionNoteField, value) != true)) {
                    this.RestrictionNoteField = value;
                    this.RaisePropertyChanged("RestrictionNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToHSCode {
            get {
                return this.ToHSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ToHSCodeField, value) != true)) {
                    this.ToHSCodeField = value;
                    this.RaisePropertyChanged("ToHSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebsiteInfo {
            get {
                return this.WebsiteInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteInfoField, value) != true)) {
                    this.WebsiteInfoField = value;
                    this.RaisePropertyChanged("WebsiteInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HSLookupInfo", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class HSLookupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HSCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HSCode {
            get {
                return this.HSCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HSCodeField, value) != true)) {
                    this.HSCodeField = value;
                    this.RaisePropertyChanged("HSCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observations {
            get {
                return this.ObservationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationsField, value) != true)) {
                    this.ObservationsField = value;
                    this.RaisePropertyChanged("Observations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchdogInfo", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
    [System.SerializableAttribute()]
    public partial class WatchdogInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PushOrders.CDSAPIService.WatchdogInfo.OperationType OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushOrders.CDSAPIService.WatchdogInfo.OperationType Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WatchdogInfo.OperationType", Namespace="http://schemas.datacontract.org/2004/07/CDS.BusinessLayer.Operational")]
        public enum OperationType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Clear = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MarkAsBlocked = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            MarkWithWarning = 5,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CDSAPIService.ICDSAPIService")]
    public interface ICDSAPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/ConvertCurrency", ReplyAction="http://tempuri.org/ICDSAPIService/ConvertCurrencyResponse")]
        decimal ConvertCurrency(System.Guid token, string organizationCd, string fromCurrencyCd, string toCurrencyCd, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/ConvertCurrency", ReplyAction="http://tempuri.org/ICDSAPIService/ConvertCurrencyResponse")]
        System.Threading.Tasks.Task<decimal> ConvertCurrencyAsync(System.Guid token, string organizationCd, string fromCurrencyCd, string toCurrencyCd, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetDecisionNameAndCategoryFromCode", ReplyAction="http://tempuri.org/ICDSAPIService/GetDecisionNameAndCategoryFromCodeResponse")]
        string[] GetDecisionNameAndCategoryFromCode(System.Guid token, string decisionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetDecisionNameAndCategoryFromCode", ReplyAction="http://tempuri.org/ICDSAPIService/GetDecisionNameAndCategoryFromCodeResponse")]
        System.Threading.Tasks.Task<string[]> GetDecisionNameAndCategoryFromCodeAsync(System.Guid token, string decisionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/Load", ReplyAction="http://tempuri.org/ICDSAPIService/LoadResponse")]
        PushOrders.CDSAPIService.CDSView[] Load(
                    System.Guid token, 
                    string postalOrgCd, 
                    string customsOrgCd, 
                    string organizationTypeCd, 
                    string id, 
                    string flow, 
                    string partnerPostalOrgCd, 
                    string partCountryCd, 
                    System.Nullable<System.DateTime> dtFrom, 
                    System.Nullable<System.DateTime> dtTo, 
                    string zipFrom, 
                    string zipTo, 
                    string mailClassCd, 
                    bool onlyWithoutResponse, 
                    bool onlyWithDeclarationOrResponse, 
                    System.Nullable<int> recordsLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/Load", ReplyAction="http://tempuri.org/ICDSAPIService/LoadResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.CDSView[]> LoadAsync(
                    System.Guid token, 
                    string postalOrgCd, 
                    string customsOrgCd, 
                    string organizationTypeCd, 
                    string id, 
                    string flow, 
                    string partnerPostalOrgCd, 
                    string partCountryCd, 
                    System.Nullable<System.DateTime> dtFrom, 
                    System.Nullable<System.DateTime> dtTo, 
                    string zipFrom, 
                    string zipTo, 
                    string mailClassCd, 
                    bool onlyWithoutResponse, 
                    bool onlyWithDeclarationOrResponse, 
                    System.Nullable<int> recordsLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetCustomsStatus", ReplyAction="http://tempuri.org/ICDSAPIService/GetCustomsStatusResponse")]
        PushOrders.CDSAPIService.CDSView GetCustomsStatus(System.Guid token, string postalOrgCd, string id, string flow, bool forceCreateResponseIfNotAvailable, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetCustomsStatus", ReplyAction="http://tempuri.org/ICDSAPIService/GetCustomsStatusResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.CDSView> GetCustomsStatusAsync(System.Guid token, string postalOrgCd, string id, string flow, bool forceCreateResponseIfNotAvailable, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateNewDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/CreateNewDeclarationResponse")]
        PushOrders.CDSAPIService.Declaration CreateNewDeclaration(System.Guid token, string postalOrgCd, string customsOrgCd, string itemId, string mailFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateNewDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/CreateNewDeclarationResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.Declaration> CreateNewDeclarationAsync(System.Guid token, string postalOrgCd, string customsOrgCd, string itemId, string mailFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateNewResponse", ReplyAction="http://tempuri.org/ICDSAPIService/CreateNewResponseResponse")]
        PushOrders.CDSAPIService.Response CreateNewResponse(System.Guid token, string postalOrgCd, string customsOrgCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateNewResponse", ReplyAction="http://tempuri.org/ICDSAPIService/CreateNewResponseResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.Response> CreateNewResponseAsync(System.Guid token, string postalOrgCd, string customsOrgCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/StoreDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/StoreDeclarationResponse")]
        void StoreDeclaration(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Declaration decl, int evtCd, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/StoreDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/StoreDeclarationResponse")]
        System.Threading.Tasks.Task StoreDeclarationAsync(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Declaration decl, int evtCd, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/StoreResponse", ReplyAction="http://tempuri.org/ICDSAPIService/StoreResponseResponse")]
        void StoreResponse(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Response resp, int evtCd, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/StoreResponse", ReplyAction="http://tempuri.org/ICDSAPIService/StoreResponseResponse")]
        System.Threading.Tasks.Task StoreResponseAsync(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Response resp, int evtCd, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateOrUpdateDeclarations", ReplyAction="http://tempuri.org/ICDSAPIService/CreateOrUpdateDeclarationsResponse")]
        void CreateOrUpdateDeclarations(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateOrUpdateDeclarations", ReplyAction="http://tempuri.org/ICDSAPIService/CreateOrUpdateDeclarationsResponse")]
        System.Threading.Tasks.Task CreateOrUpdateDeclarationsAsync(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateOrUpdateResponses", ReplyAction="http://tempuri.org/ICDSAPIService/CreateOrUpdateResponsesResponse")]
        void CreateOrUpdateResponses(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/CreateOrUpdateResponses", ReplyAction="http://tempuri.org/ICDSAPIService/CreateOrUpdateResponsesResponse")]
        System.Threading.Tasks.Task CreateOrUpdateResponsesAsync(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/UpdateMailState", ReplyAction="http://tempuri.org/ICDSAPIService/UpdateMailStateResponse")]
        void UpdateMailState(System.Guid securityToken, string id, string postalOrgCd, string partnerPostalOrgCd, string flow, int mailState, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/UpdateMailState", ReplyAction="http://tempuri.org/ICDSAPIService/UpdateMailStateResponse")]
        System.Threading.Tasks.Task UpdateMailStateAsync(System.Guid securityToken, string id, string postalOrgCd, string partnerPostalOrgCd, string flow, int mailState, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/ConvertAnonymousToCDSDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/ConvertAnonymousToCDSDeclarationResponse")]
        void ConvertAnonymousToCDSDeclaration(System.Guid securityToken, string anonymousDeclarationId, string internationalItemId, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/ConvertAnonymousToCDSDeclaration", ReplyAction="http://tempuri.org/ICDSAPIService/ConvertAnonymousToCDSDeclarationResponse")]
        System.Threading.Tasks.Task ConvertAnonymousToCDSDeclarationAsync(System.Guid securityToken, string anonymousDeclarationId, string internationalItemId, string userCd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetHSCodes", ReplyAction="http://tempuri.org/ICDSAPIService/GetHSCodesResponse")]
        PushOrders.CDSAPIService.HSLookupInfo[] GetHSCodes(System.Guid securityToken, string goodDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetHSCodes", ReplyAction="http://tempuri.org/ICDSAPIService/GetHSCodesResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.HSLookupInfo[]> GetHSCodesAsync(System.Guid securityToken, string goodDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByDescription", ReplyAction="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByDescriptionResponse")]
        PushOrders.CDSAPIService.RestrictionProhibition[] GetRestrictionProhibitionByDescription(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByDescription", ReplyAction="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByDescriptionResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.RestrictionProhibition[]> GetRestrictionProhibitionByDescriptionAsync(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByHS", ReplyAction="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByHSResponse")]
        PushOrders.CDSAPIService.RestrictionProhibition[] GetRestrictionProhibitionByHS(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodHSCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByHS", ReplyAction="http://tempuri.org/ICDSAPIService/GetRestrictionProhibitionByHSResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.RestrictionProhibition[]> GetRestrictionProhibitionByHSAsync(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodHSCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetWatchdogItemInfo", ReplyAction="http://tempuri.org/ICDSAPIService/GetWatchdogItemInfoResponse")]
        PushOrders.CDSAPIService.WatchdogInfo GetWatchdogItemInfo(System.Guid securityToken, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/GetWatchdogItemInfo", ReplyAction="http://tempuri.org/ICDSAPIService/GetWatchdogItemInfoResponse")]
        System.Threading.Tasks.Task<PushOrders.CDSAPIService.WatchdogInfo> GetWatchdogItemInfoAsync(System.Guid securityToken, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/SetWatchdogItemInfo", ReplyAction="http://tempuri.org/ICDSAPIService/SetWatchdogItemInfoResponse")]
        void SetWatchdogItemInfo(System.Guid securityToken, string itemId, string destinationPostalOrgCd, string mailClass, System.Nullable<System.DateTime> postingDate, PushOrders.CDSAPIService.WatchdogInfo watchdogInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDSAPIService/SetWatchdogItemInfo", ReplyAction="http://tempuri.org/ICDSAPIService/SetWatchdogItemInfoResponse")]
        System.Threading.Tasks.Task SetWatchdogItemInfoAsync(System.Guid securityToken, string itemId, string destinationPostalOrgCd, string mailClass, System.Nullable<System.DateTime> postingDate, PushOrders.CDSAPIService.WatchdogInfo watchdogInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICDSAPIServiceChannel : PushOrders.CDSAPIService.ICDSAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CDSAPIServiceClient : System.ServiceModel.ClientBase<PushOrders.CDSAPIService.ICDSAPIService>, PushOrders.CDSAPIService.ICDSAPIService {
        
        public CDSAPIServiceClient() {
        }
        
        public CDSAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CDSAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDSAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDSAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal ConvertCurrency(System.Guid token, string organizationCd, string fromCurrencyCd, string toCurrencyCd, decimal amount) {
            return base.Channel.ConvertCurrency(token, organizationCd, fromCurrencyCd, toCurrencyCd, amount);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertCurrencyAsync(System.Guid token, string organizationCd, string fromCurrencyCd, string toCurrencyCd, decimal amount) {
            return base.Channel.ConvertCurrencyAsync(token, organizationCd, fromCurrencyCd, toCurrencyCd, amount);
        }
        
        public string[] GetDecisionNameAndCategoryFromCode(System.Guid token, string decisionCode) {
            return base.Channel.GetDecisionNameAndCategoryFromCode(token, decisionCode);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDecisionNameAndCategoryFromCodeAsync(System.Guid token, string decisionCode) {
            return base.Channel.GetDecisionNameAndCategoryFromCodeAsync(token, decisionCode);
        }
        
        public PushOrders.CDSAPIService.CDSView[] Load(
                    System.Guid token, 
                    string postalOrgCd, 
                    string customsOrgCd, 
                    string organizationTypeCd, 
                    string id, 
                    string flow, 
                    string partnerPostalOrgCd, 
                    string partCountryCd, 
                    System.Nullable<System.DateTime> dtFrom, 
                    System.Nullable<System.DateTime> dtTo, 
                    string zipFrom, 
                    string zipTo, 
                    string mailClassCd, 
                    bool onlyWithoutResponse, 
                    bool onlyWithDeclarationOrResponse, 
                    System.Nullable<int> recordsLimit) {
            return base.Channel.Load(token, postalOrgCd, customsOrgCd, organizationTypeCd, id, flow, partnerPostalOrgCd, partCountryCd, dtFrom, dtTo, zipFrom, zipTo, mailClassCd, onlyWithoutResponse, onlyWithDeclarationOrResponse, recordsLimit);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.CDSView[]> LoadAsync(
                    System.Guid token, 
                    string postalOrgCd, 
                    string customsOrgCd, 
                    string organizationTypeCd, 
                    string id, 
                    string flow, 
                    string partnerPostalOrgCd, 
                    string partCountryCd, 
                    System.Nullable<System.DateTime> dtFrom, 
                    System.Nullable<System.DateTime> dtTo, 
                    string zipFrom, 
                    string zipTo, 
                    string mailClassCd, 
                    bool onlyWithoutResponse, 
                    bool onlyWithDeclarationOrResponse, 
                    System.Nullable<int> recordsLimit) {
            return base.Channel.LoadAsync(token, postalOrgCd, customsOrgCd, organizationTypeCd, id, flow, partnerPostalOrgCd, partCountryCd, dtFrom, dtTo, zipFrom, zipTo, mailClassCd, onlyWithoutResponse, onlyWithDeclarationOrResponse, recordsLimit);
        }
        
        public PushOrders.CDSAPIService.CDSView GetCustomsStatus(System.Guid token, string postalOrgCd, string id, string flow, bool forceCreateResponseIfNotAvailable, string userCd) {
            return base.Channel.GetCustomsStatus(token, postalOrgCd, id, flow, forceCreateResponseIfNotAvailable, userCd);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.CDSView> GetCustomsStatusAsync(System.Guid token, string postalOrgCd, string id, string flow, bool forceCreateResponseIfNotAvailable, string userCd) {
            return base.Channel.GetCustomsStatusAsync(token, postalOrgCd, id, flow, forceCreateResponseIfNotAvailable, userCd);
        }
        
        public PushOrders.CDSAPIService.Declaration CreateNewDeclaration(System.Guid token, string postalOrgCd, string customsOrgCd, string itemId, string mailFlow) {
            return base.Channel.CreateNewDeclaration(token, postalOrgCd, customsOrgCd, itemId, mailFlow);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.Declaration> CreateNewDeclarationAsync(System.Guid token, string postalOrgCd, string customsOrgCd, string itemId, string mailFlow) {
            return base.Channel.CreateNewDeclarationAsync(token, postalOrgCd, customsOrgCd, itemId, mailFlow);
        }
        
        public PushOrders.CDSAPIService.Response CreateNewResponse(System.Guid token, string postalOrgCd, string customsOrgCd) {
            return base.Channel.CreateNewResponse(token, postalOrgCd, customsOrgCd);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.Response> CreateNewResponseAsync(System.Guid token, string postalOrgCd, string customsOrgCd) {
            return base.Channel.CreateNewResponseAsync(token, postalOrgCd, customsOrgCd);
        }
        
        public void StoreDeclaration(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Declaration decl, int evtCd, string userCd) {
            base.Channel.StoreDeclaration(token, mailObject, decl, evtCd, userCd);
        }
        
        public System.Threading.Tasks.Task StoreDeclarationAsync(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Declaration decl, int evtCd, string userCd) {
            return base.Channel.StoreDeclarationAsync(token, mailObject, decl, evtCd, userCd);
        }
        
        public void StoreResponse(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Response resp, int evtCd, string userCd) {
            base.Channel.StoreResponse(token, mailObject, resp, evtCd, userCd);
        }
        
        public System.Threading.Tasks.Task StoreResponseAsync(System.Guid token, PushOrders.CDSAPIService.MailObject mailObject, PushOrders.CDSAPIService.Response resp, int evtCd, string userCd) {
            return base.Channel.StoreResponseAsync(token, mailObject, resp, evtCd, userCd);
        }
        
        public void CreateOrUpdateDeclarations(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd) {
            base.Channel.CreateOrUpdateDeclarations(securityToken, cdsViews, userCd);
        }
        
        public System.Threading.Tasks.Task CreateOrUpdateDeclarationsAsync(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd) {
            return base.Channel.CreateOrUpdateDeclarationsAsync(securityToken, cdsViews, userCd);
        }
        
        public void CreateOrUpdateResponses(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd) {
            base.Channel.CreateOrUpdateResponses(securityToken, cdsViews, userCd);
        }
        
        public System.Threading.Tasks.Task CreateOrUpdateResponsesAsync(System.Guid securityToken, PushOrders.CDSAPIService.CDSView[] cdsViews, string userCd) {
            return base.Channel.CreateOrUpdateResponsesAsync(securityToken, cdsViews, userCd);
        }
        
        public void UpdateMailState(System.Guid securityToken, string id, string postalOrgCd, string partnerPostalOrgCd, string flow, int mailState, string userCd) {
            base.Channel.UpdateMailState(securityToken, id, postalOrgCd, partnerPostalOrgCd, flow, mailState, userCd);
        }
        
        public System.Threading.Tasks.Task UpdateMailStateAsync(System.Guid securityToken, string id, string postalOrgCd, string partnerPostalOrgCd, string flow, int mailState, string userCd) {
            return base.Channel.UpdateMailStateAsync(securityToken, id, postalOrgCd, partnerPostalOrgCd, flow, mailState, userCd);
        }
        
        public void ConvertAnonymousToCDSDeclaration(System.Guid securityToken, string anonymousDeclarationId, string internationalItemId, string userCd) {
            base.Channel.ConvertAnonymousToCDSDeclaration(securityToken, anonymousDeclarationId, internationalItemId, userCd);
        }
        
        public System.Threading.Tasks.Task ConvertAnonymousToCDSDeclarationAsync(System.Guid securityToken, string anonymousDeclarationId, string internationalItemId, string userCd) {
            return base.Channel.ConvertAnonymousToCDSDeclarationAsync(securityToken, anonymousDeclarationId, internationalItemId, userCd);
        }
        
        public PushOrders.CDSAPIService.HSLookupInfo[] GetHSCodes(System.Guid securityToken, string goodDescription) {
            return base.Channel.GetHSCodes(securityToken, goodDescription);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.HSLookupInfo[]> GetHSCodesAsync(System.Guid securityToken, string goodDescription) {
            return base.Channel.GetHSCodesAsync(securityToken, goodDescription);
        }
        
        public PushOrders.CDSAPIService.RestrictionProhibition[] GetRestrictionProhibitionByDescription(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodDescription) {
            return base.Channel.GetRestrictionProhibitionByDescription(securityToken, destinationPostalOrgCd, sendingCountryCd, goodDescription);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.RestrictionProhibition[]> GetRestrictionProhibitionByDescriptionAsync(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodDescription) {
            return base.Channel.GetRestrictionProhibitionByDescriptionAsync(securityToken, destinationPostalOrgCd, sendingCountryCd, goodDescription);
        }
        
        public PushOrders.CDSAPIService.RestrictionProhibition[] GetRestrictionProhibitionByHS(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodHSCode) {
            return base.Channel.GetRestrictionProhibitionByHS(securityToken, destinationPostalOrgCd, sendingCountryCd, goodHSCode);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.RestrictionProhibition[]> GetRestrictionProhibitionByHSAsync(System.Guid securityToken, string destinationPostalOrgCd, string sendingCountryCd, string goodHSCode) {
            return base.Channel.GetRestrictionProhibitionByHSAsync(securityToken, destinationPostalOrgCd, sendingCountryCd, goodHSCode);
        }
        
        public PushOrders.CDSAPIService.WatchdogInfo GetWatchdogItemInfo(System.Guid securityToken, string itemId) {
            return base.Channel.GetWatchdogItemInfo(securityToken, itemId);
        }
        
        public System.Threading.Tasks.Task<PushOrders.CDSAPIService.WatchdogInfo> GetWatchdogItemInfoAsync(System.Guid securityToken, string itemId) {
            return base.Channel.GetWatchdogItemInfoAsync(securityToken, itemId);
        }
        
        public void SetWatchdogItemInfo(System.Guid securityToken, string itemId, string destinationPostalOrgCd, string mailClass, System.Nullable<System.DateTime> postingDate, PushOrders.CDSAPIService.WatchdogInfo watchdogInfo) {
            base.Channel.SetWatchdogItemInfo(securityToken, itemId, destinationPostalOrgCd, mailClass, postingDate, watchdogInfo);
        }
        
        public System.Threading.Tasks.Task SetWatchdogItemInfoAsync(System.Guid securityToken, string itemId, string destinationPostalOrgCd, string mailClass, System.Nullable<System.DateTime> postingDate, PushOrders.CDSAPIService.WatchdogInfo watchdogInfo) {
            return base.Channel.SetWatchdogItemInfoAsync(securityToken, itemId, destinationPostalOrgCd, mailClass, postingDate, watchdogInfo);
        }
    }
}
